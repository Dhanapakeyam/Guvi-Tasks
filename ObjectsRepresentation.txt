 Objects and Its Internal Representations :

    Objects, in JavaScript, is it’s most important data-type and forms the building blocks for modern JavaScript.
Each object may contain any combination of primitive data-types as well as reference data-types.

    An object, is a reference data type. Variables that are assigned a reference value are given 
a reference or a pointer to that value. That reference or pointer points to the location in memory 
where the object is stored. The variables don’t actually store the value.

    objects in JavaScript may be defined as an unordered collection of related data, 
of primitive or reference types, in the form of “key: value” pairs.

These keys can be variables or functions and are called properties and methods, respectively, 
in the context of an object.

    An object can be created with figure brackets {…} with an optional list of properties. 
A property is a “key: value” pair, where a key is a string (also called a “property name”), 
and value can be anything.

let object-name = { key : "value"}

Example:
let book = { book-name : " Java", edition : "Seventh Edition", price : "1000"}

    Each of these keys is referred to as properties of the object. An object in JavaScript may also have 
a function as a member, in which case it will be known as a method of that object.
Example:
let book = { book-name : " Java", edition : "Seventh Edition", price : "1000", display : fuction()
{
    console.log("Book Details");
} 
}



